name: Build and Push Dockerhub
on:
  push:
    branches: [master, github-action-fix]
    paths-ignore:
#      - .github/**
      - README.md
  release:
    types: [published]
jobs:
  buildx:
    runs-on: ubuntu-latest
    steps:
      # - name: Set Image Tag to Release or Branch
      #   run: echo "DOCKER_IMAGE_TAG=${GITHUB_REF##*/}" >> $GITHUB_ENV
      # - name: If master, set to latest
      #   if: env.DOCKER_IMAGE_TAG == 'master'
      #   run: echo "DOCKER_IMAGE_TAG=latest" >> $GITHUB_ENV
      - uses: actions/checkout@v2
      - name: Docker meta
        id: docker_meta
        uses: crazy-max/ghaction-docker-meta@v1
        with:
          images: ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_IMAGE_NAME }}
#      - name: Buildx setup
#        uses: crazy-max/ghaction-docker-buildx@v2
      - name: Set up QEMU
        id: qemu
        uses: docker/setup-qemu-action@v1
        with:
          image: tonistiigi/binfmt:latest
          platforms: all
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      - name: Dockerhub login
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - name: Build and Push
        uses: docker/build-push-action@v2
        id: docker_build
        with:
          context: .
          platforms: linux/arm64/v8,linux/amd64
          push: true
          tags: ${{ steps.docker_meta.outputs.tags }}
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
      # - name: Run Buildx
      #   run: |
      #     docker buildx build \
      #       --push \
      #       --platform linux/arm64/v8,linux/amd64  \
      #       --tag "${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_IMAGE_NAME }}:${DOCKER_IMAGE_TAG}" \
      #       --file Dockerfile .